# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19.3'
        
    - name: clidriver
      run: |
         pwd
         go run installer/setup.go
         pwd
         ibm_db_home=/home/runner/work/clidriver
         cgo_cflags=-I$ibm_db_home/include
         cgo_ldflags=-L$ibm_db_home/lib
         ld_library_path=$ibm_db_home/lib
         echo "IBM_DB_HOME=$ibm_db_home" >> "$GITHUB_ENV"
         echo "CGO_CFLAGS=$cgo_cflags" >> "$GITHUB_ENV"
         echo "CGO_LDFLAGS=$cgo_ldflags" >> "$GITHUB_ENV"
         echo "LD_LIBRARY_PATH=$ld_library_path" >> "$GITHUB_ENV"

         db2_user=Zurbie
         db2_passwd=A2m8test
         db2_database=Sample
         db2_hostname=waldevdbclnxtst06.dev.rocketsoftware.com
         db2_port=60000
         echo "DB2_USER=$db2_user" >> "$GITHUB_ENV"
         echo "DB2_PASSWD=$db2_passwd" >> "$GITHUB_ENV"
         echo "DB2_DATABASE=$db2_database" >> "$GITHUB_ENV"
         echo "DB2_HOSTNAME=$db2_hostname" >> "$GITHUB_ENV"
         echo "DB2_PORT=$db2_port" >> "$GITHUB_ENV"
         
         
         #cd ../..
         #pwd
         #ls
         #echo "checking clidriver"
         #ls clidriver
         #source installer/setenv.sh
  
    - name: Modfiles
      run: |
        pwd
        go mod init t1
        go mod tidy
        
   # - name: build
   #   run: go build -v ./...

    - name: Test
      run: |
           pwd
           cd testdata
           go mod init t2
           go mod tidy
           echo "==================="
           echo "CGO_LDFLAGS = " $CGO_LDFLAGS
           echo "DB2_USER = " $DB2_USER
           pwd
           #go test -v
           go test createdroptable_test.go main.go
